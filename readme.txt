The pagerank implementation of MPI or PySpark takes a directed graph file to process. Thus, we prepared graph10000, which has 10000 page ids and various number of links for each page, and graph60000, which has 60000 page ids and various number of links for each page. Furthermore, to test the correctness of our implementation, we also prepared simpleGraph which has only 5 unique pages and 9 links intotal. 

To generate a new sample graph, you can run "python GenerateGraph.py" in your command line under the source code directory. By default, the program will output a graph with 60000 unique pages and 1 to 30 links for each page. To customize the program, you can modify the two variables called "sources" and "max_links" inside the code. "sources" control the number of unique pages, and "max_links" control the number of maximum links that each page can have. 

To run the MPI implementation, you need to install a working MPI implementation. For example, if you are on a windows machine, you can install Microsoft MPI. Then, you need to install mpi4py library by execute the command line instruction "pip install mpi4py", if you have pip installed. The sample command line instruction to run Pagerank with mpi is "mpiexec -n 3 python PagerankMPI.py graph10000". The -n flag specify the number of process that the program will spawn, and in this case, there are 3 workers incluiding the root process. The argument takes by the PagerankMPI.py is the name of the graph file, and the graph needs to be placed at the same directory as the program. In this case, the graph file taken by MPI is graph10000.

Before runing the Pagerank with PySpark, you need to install PySpark and findspark. PySpark can be download from Apach PySpark distribution, and findspark can be installed by the command line instrution "pip install findspark", if you have pip installed. Furthermore, you also need to specify the path to graph inside the code at line 14 and the the path to PySpark at line 8. To run the PySpark implementation, you can simply run the command line instruction "python PagerankPySpark.py". By default, the program will repartition the joined RDD to 2 partitions. You can change the number of partitions at line 19.